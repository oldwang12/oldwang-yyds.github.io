[{"title":"Golang连接Email","url":"/2021/07/19/Golang%E8%BF%9E%E6%8E%A5Email/","content":"<p>Golang 连接 Email</p>\n<span id=\"more\"></span>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"crypto/tls\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"strconv\"</span>\n\n    <span class=\"token string\">\"git.ucloudadmin.com/leesin/email/html\"</span>\n    log <span class=\"token string\">\"github.com/gogap/logrus\"</span>\n    <span class=\"token string\">\"gopkg.in/gomail.v2\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">SendMail</span><span class=\"token punctuation\">(</span>mailTo <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> subject <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> body <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//定义邮箱服务器连接信息，如果是阿里邮箱 pass填密码，qq邮箱填授权码</span>\n    mailConn <span class=\"token operator\">:=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"123456789@qq.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pass\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"授权码\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"host\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"smtp.qq.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"port\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"25\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    port<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span>mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"port\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//转换端口类型为int</span>\n    m <span class=\"token operator\">:=</span> gomail<span class=\"token punctuation\">.</span><span class=\"token function\">NewMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"From\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yw\"</span><span class=\"token operator\">+</span><span class=\"token string\">\"&lt;\"</span><span class=\"token operator\">+</span>mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//这种方式可以添加别名，即“XD Game”， 也可以直接用&lt;code>m.SetHeader(\"From\",mailConn[\"user\"])&lt;/code> 读者可以自行实验下效果</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"To\"</span><span class=\"token punctuation\">,</span> mailTo<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>                       <span class=\"token comment\">//发送给多个用户</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Subject\"</span><span class=\"token punctuation\">,</span> subject<span class=\"token punctuation\">)</span>                    <span class=\"token comment\">//设置邮件主题</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span>                       <span class=\"token comment\">//设置邮件正文</span>\n    d <span class=\"token operator\">:=</span> gomail<span class=\"token punctuation\">.</span><span class=\"token function\">NewDialer</span><span class=\"token punctuation\">(</span>mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"host\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"pass\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    d<span class=\"token punctuation\">.</span>TLSConfig <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>tls<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">&#123;</span>InsecureSkipVerify<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span>\n    err <span class=\"token operator\">:=</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">DialAndSend</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> err\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    subject <span class=\"token operator\">:=</span> <span class=\"token string\">\"Dobrother 运营日报\"</span>\n    body <span class=\"token operator\">:=</span> html<span class=\"token punctuation\">.</span><span class=\"token function\">LoadHtml</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// html.LoadHtml load html, return type string</span>\n\n    err <span class=\"token operator\">:=</span> <span class=\"token function\">SendMail</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">.</span>MailTo<span class=\"token punctuation\">,</span> subject<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"邮件发送失败： \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> html<span class=\"token punctuation\">.</span>MailTo <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"邮件成功发送至管理员: \"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","tags":["golang"]},{"title":"Golang连接Mysql","url":"/2021/07/19/Golang%E8%BF%9E%E6%8E%A5Mysql/","content":"<p>Golang 连接 Mysql</p>\n<span id=\"more\"></span>\n\n<p>注意：如果不使用 dn.Ping()，无法验证是否可以 ping 通 mysql</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"database/sql\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"log\"</span>\n\n    <span class=\"token boolean\">_</span> <span class=\"token string\">\"github.com/go-sql-driver/mysql\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>\n    username <span class=\"token operator\">=</span> <span class=\"token string\">\"root\"</span>\n    passward <span class=\"token operator\">=</span> <span class=\"token string\">\"123456\"</span>\n    network  <span class=\"token operator\">=</span> <span class=\"token string\">\"tcp\"</span>\n    host     <span class=\"token operator\">=</span> <span class=\"token string\">\"192.168.0.100\"</span>\n    port     <span class=\"token operator\">=</span> <span class=\"token number\">3306</span>\n    database <span class=\"token operator\">=</span> <span class=\"token string\">\"lee\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    dsn <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s:%s@%s(%s:%d)/%s\"</span><span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> passward<span class=\"token punctuation\">,</span> network<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> database<span class=\"token punctuation\">)</span>\n\n    db<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> sql<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">,</span> dsn<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Open mysql failed,err:%v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">defer</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    err <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">Ping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Open mysql succeed\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","tags":["golang"]},{"title":"Golang类型转换","url":"/2021/07/19/Golang%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/","content":"<p>Golang类型转换</p>\n<span id=\"more\"></span>\n\n<h4 id=\"string-转-int\"><a href=\"#string-转-int\" class=\"headerlink\" title=\"string 转 int\"></a>string 转 int</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"string-转-int64\"><a href=\"#string-转-int64\" class=\"headerlink\" title=\"string 转 int64\"></a>string 转 int64</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">int64</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">ParseInt</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span>  \n<span class=\"token comment\">//第二个参数为基数（2~36），</span>\n<span class=\"token comment\">//第三个参数位大小表示期望转换的结果类型，其值可以为0, 8, 16, 32和64，</span>\n<span class=\"token comment\">//分别对应 int, int8, int16, int32和int64</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"int-转-string\"><a href=\"#int-转-string\" class=\"headerlink\" title=\"int 转 string\"></a>int 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Itoa</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> \n<span class=\"token comment\">//等价于</span>\n<span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatInt</span><span class=\"token punctuation\">(</span><span class=\"token function\">int64</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"int64-转-string\"><a href=\"#int64-转-string\" class=\"headerlink\" title=\"int64 转 string\"></a>int64 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatInt</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int64</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>  \n<span class=\"token comment\">//第二个参数为基数，可选2~36</span>\n<span class=\"token comment\">//对于无符号整形，可以使用FormatUint(i uint64, base int)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"float-转-string\"><a href=\"#float-转-string\" class=\"headerlink\" title=\"float 转 string\"></a>float 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatFloat</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float32</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">string</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatFloat</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float64</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 'b' (-ddddp±ddd，二进制指数)</span>\n<span class=\"token comment\">// 'e' (-d.dddde±dd，十进制指数)</span>\n<span class=\"token comment\">// 'E' (-d.ddddE±dd，十进制指数)</span>\n<span class=\"token comment\">// 'f' (-ddd.dddd，没有指数)</span>\n<span class=\"token comment\">// 'g' ('e':大指数，'f':其它情况)</span>\n<span class=\"token comment\">// 'G' ('E':大指数，'f':其它情况)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"string-转-float64\"><a href=\"#string-转-float64\" class=\"headerlink\" title=\"string 转 float64\"></a>string 转 float64</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">float<span class=\"token punctuation\">,</span>err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">ParseFloat</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"string-转-float32\"><a href=\"#string-转-float32\" class=\"headerlink\" title=\"string 转 float32\"></a>string 转 float32</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">float<span class=\"token punctuation\">,</span>err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">ParseFloat</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"int-转-int64\"><a href=\"#int-转-int64\" class=\"headerlink\" title=\"int 转 int64\"></a>int 转 int64</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">int64_ <span class=\"token operator\">:=</span> <span class=\"token function\">int64</span><span class=\"token punctuation\">(</span><span class=\"token number\">1234</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"byte-转-string\"><a href=\"#byte-转-string\" class=\"headerlink\" title=\"[]byte 转 string\"></a>[]byte 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">s <span class=\"token operator\">:=</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"interface-转-string\"><a href=\"#interface-转-string\" class=\"headerlink\" title=\"interface{} 转 string\"></a>interface{} 转 string</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">m <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\nm<span class=\"token punctuation\">[</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"hahahha\"</span>\ns <span class=\"token operator\">:=</span> m<span class=\"token punctuation\">[</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">]</span>\na <span class=\"token operator\">:=</span> s<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: \"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>","tags":["golang"]},{"title":"Golang连接Redis","url":"/2021/07/19/Golang%E8%BF%9E%E6%8E%A5Redis/","content":"<p>Golang 连接 Redis</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"sync\"</span>\n    <span class=\"token string\">\"time\"</span>\n\n    <span class=\"token string\">\"git.ucloudadmin.com/kun/appshop/pkg/log\"</span>\n    <span class=\"token string\">\"gopkg.in/redis.v4\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    client <span class=\"token operator\">:=</span> <span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">defer</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">stringOperation</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">listOperation</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//    setOperation(client)</span>\n    <span class=\"token comment\">//    hashOperation(client)</span>\n\n    <span class=\"token function\">connectPool</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 创建 redis 客户端</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client <span class=\"token punctuation\">&#123;</span>\n    client <span class=\"token operator\">:=</span> redis<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>redis<span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">&#123;</span>\n        Addr<span class=\"token punctuation\">:</span>     <span class=\"token string\">\"localhost:6379\"</span><span class=\"token punctuation\">,</span>\n        Password<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        DB<span class=\"token punctuation\">:</span>       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        PoolSize<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n    pong<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Ping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">,</span> <span class=\"token string\">\" pong: \"</span><span class=\"token punctuation\">,</span> pong<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> client\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// String 操作</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">stringOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stringOperation\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 第三个参数设置过期时间, 如果是 0, 则表示没有过期时间</span>\n    err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">*</span>time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">Incr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 自增</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">Incr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 自增</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">Decr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 自减</span>\n\n    val<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span> <span class=\"token comment\">// age 的值为21</span>\n\n    <span class=\"token comment\">// 因为 key \"age\" 的过期时间是一秒钟, 因此当一秒后, 此 key 会自动被删除了.</span>\n    time<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span>\n    val<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error: %v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 因为 key \"age\" 已经过期了, 因此会有一个 redis: nil 的错误.</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"过期后 age: \"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">listOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"listOperation\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">RPush</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">)</span>               <span class=\"token comment\">// 在名称为 fruit 的list尾添加一个值为value的元素</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">LPush</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">// 在名称为 fruit 的list头添加一个值为value的 元素</span>\n    length<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">LLen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 返回名称为 fruit 的list的长度</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit list length: \"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 长度为2</span>\n\n    value<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">LPop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//返回并删除名称为 fruit 的list中的首元素</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit: \"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n\n    value<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">RPop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 返回并删除名称为 fruit 的list中的尾元素</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit: \"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit list length: \"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 长度为2</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// set 操作</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">setOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Obama\"</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 向 blacklist 中添加元素</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hillary\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 再次添加</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"the Elder\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加新元素</span>\n\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"whitelist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"the Elder\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 向 whitelist 添加元素</span>\n\n    <span class=\"token comment\">// 判断元素是否在集合中</span>\n    isMember<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">SIsMember</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Bush\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Is Bush in blacklist: \"</span><span class=\"token punctuation\">,</span> isMember<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 求交集, 即既在黑名单中, 又在白名单中的元素</span>\n    names<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">SInter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"whitelist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 获取到的元素是 \"the Elder\"</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Inter result: \"</span><span class=\"token punctuation\">,</span> names<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 获取指定集合的所有元素</span>\n    all<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">SMembers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"All member: \"</span><span class=\"token punctuation\">,</span> all<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// hash 操作</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">hashOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_xys\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"xys\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 向名称为 user_xys 的 hash 中添加元素 name</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_xys\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"18\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 向名称为 user_xys 的 hash 中添加元素 age</span>\n\n    <span class=\"token comment\">// 批量地向名称为 user_test 的 hash 中添加元素 name 和 age</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HMSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 批量获取名为 user_test 的 hash 中的指定字段的值.</span>\n    fields<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">HMGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fields in user_test: \"</span><span class=\"token punctuation\">,</span> fields<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 获取名为 user_xys 的 hash 中的字段个数</span>\n    length<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">HLen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_xys\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"field count in user_xys: \"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 字段个数为2</span>\n\n    <span class=\"token comment\">// 删除名为 user_test 的 age 字段</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HDel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span>\n    age<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">HGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Get user_test age error: %v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test age is: \"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 字段个数为2</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// redis.v4 的连接池管理</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">connectPool</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    wg <span class=\"token operator\">:=</span> sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">defer</span> wg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">for</span> j <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n                client<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name%d\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xys%d\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                client<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name%d\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token comment\">//    fmt.Printf(\"PoolStats, TotalConns: %d, FreeConns: %d\\n\", client.PoolStats().TotalConns, client.PoolStats().FreeConns)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    wg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","tags":["golang"]},{"title":"Golang连接 HTML","url":"/2021/07/19/Golang%E8%BF%9E%E6%8E%A5HTML/","content":"<p>Golang 连接 HTML</p>\n<span id=\"more\"></span>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        fs <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">FileServer</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span><span class=\"token function\">Dir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yuru/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> fs<span class=\"token punctuation\">)</span>\n\n        err <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":80\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ListenAndServe: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","tags":["golang"]},{"title":"Minikube的安装使用","url":"/2021/07/20/Minikube%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/","content":"<p>快速部署 minikube</p>\n<span id=\"more\"></span>\n<h1 id=\"Minikube安装使用\"><a href=\"#Minikube安装使用\" class=\"headerlink\" title=\"Minikube安装使用\"></a>Minikube安装使用</h1><p>在做k8s开发的时候受限于本地的性能以及复杂度不能搭建一个完整的k8s集群，这个时候需要minikube来搭建k8s开发环境</p>\n<h4 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h4><p>阿里云版本地址,官方版本地址,推荐阿里云版本</p>\n<h4 id=\"下载阿里云版本二进制文件\"><a href=\"#下载阿里云版本二进制文件\" class=\"headerlink\" title=\"下载阿里云版本二进制文件\"></a>下载阿里云版本二进制文件</h4><p>Macos</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -Lo minikube https:&#x2F;&#x2F;kubernetes.oss-cn-hangzhou.aliyuncs.com&#x2F;minikube&#x2F;releases&#x2F;v1.13.0&#x2F;minikube-darwin-amd64 &amp;&amp; chmod +x minikube &amp;&amp; sudo mv minikube &#x2F;usr&#x2F;local&#x2F;bin&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>Linux</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -Lo minikube https:&#x2F;&#x2F;kubernetes.oss-cn-hangzhou.aliyuncs.com&#x2F;minikube&#x2F;releases&#x2F;v1.14.2&#x2F;minikube-linux-amd64 &amp;&amp; chmod +x minikube &amp;&amp; sudo mv minikube &#x2F;usr&#x2F;local&#x2F;bin&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"验证安装\"><a href=\"#验证安装\" class=\"headerlink\" title=\"验证安装\"></a>验证安装</h4><p>执行minikube version验证安装</p>\n<h4 id=\"启动Minikube\"><a href=\"#启动Minikube\" class=\"headerlink\" title=\"启动Minikube\"></a>启动Minikube</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">minikube start --driver&#x3D;docker --image-mirror-country cn<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这样就启动一个使用docker作为驱动的minikube，稍等一会就会启动成功，并且将kubectl设置为minikube<br>再次启动是只需要执行minikube start即可</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">minikube start 启动集群\n\nminikube stop 停止集群\n\nminikube delete 删除集群\n\nminikube dashboard 打开k8s报表\n\nminikube status 查看minikube状态\n\nminikube ssh 登录到minikube节点上<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h4><p>如果在 Mac 上安装 minikube 不成功，可以：</p>\n<ol>\n<li><p>stop docker(退出应用即可)</p>\n</li>\n<li><p>rm ~/Library/Containers/com.docker.docker</p>\n</li>\n<li><p>启动docker后运行minikube start</p>\n</li>\n</ol>\n","tags":["k8s"]},{"title":"k8s为服务签发证书","url":"/2021/07/19/k8s%E4%B8%BA%E6%9C%8D%E5%8A%A1%E7%AD%BE%E5%8F%91%E8%AF%81%E4%B9%A6/","content":"<p>仅限于集群服务制作证书。</p>\n<span id=\"more\"></span>\n\n<h4 id=\"制作证书脚本\"><a href=\"#制作证书脚本\" class=\"headerlink\" title=\"制作证书脚本\"></a>制作证书脚本</h4><p>注意：仅限于集群服务制作证书，必须填入参数。参数1为文件夹名，参数2为 集群服务 dogbrother.prj-lee-sin.svc</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">mkdir $1\ncd $1\n\ncat &gt; ca-config.json &lt;&lt;EOF\n&#123;\n  &quot;signing&quot;: &#123;\n    &quot;default&quot;: &#123;\n      &quot;expiry&quot;: &quot;8760h&quot;\n    &#125;,\n    &quot;profiles&quot;: &#123;\n      &quot;server&quot;: &#123;\n        &quot;usages&quot;: [&quot;signing&quot;, &quot;key encipherment&quot;, &quot;server auth&quot;, &quot;client auth&quot;],\n        &quot;expiry&quot;: &quot;8760h&quot;\n      &#125;\n    &#125;\n  &#125;\n&#125;\nEOF\n\ncat &gt; ca-csr.json &lt;&lt;EOF\n&#123;\n    &quot;CN&quot;: &quot;kubernetes&quot;,\n    &quot;key&quot;: &#123;\n        &quot;algo&quot;: &quot;rsa&quot;,\n        &quot;size&quot;: 2048\n    &#125;,\n    &quot;names&quot;: [\n        &#123;\n            &quot;C&quot;: &quot;CN&quot;,\n            &quot;L&quot;: &quot;BeiJing&quot;,\n            &quot;ST&quot;: &quot;BeiJing&quot;,\n            &quot;O&quot;: &quot;k8s&quot;,\n            &quot;OU&quot;: &quot;System&quot;\n        &#125;\n    ]\n&#125;\nEOF\n\ncfssl gencert -initca ca-csr.json | cfssljson -bare ca\n\ncat &gt; server-csr.json &lt;&lt;EOF\n&#123;\n  &quot;CN&quot;: &quot;admission&quot;,\n  &quot;key&quot;: &#123;\n    &quot;algo&quot;: &quot;rsa&quot;,\n    &quot;size&quot;: 2048\n  &#125;,\n  &quot;names&quot;: [\n    &#123;\n        &quot;C&quot;: &quot;CN&quot;,\n        &quot;L&quot;: &quot;BeiJing&quot;,\n        &quot;ST&quot;: &quot;BeiJing&quot;,\n        &quot;O&quot;: &quot;k8s&quot;,\n        &quot;OU&quot;: &quot;System&quot;\n    &#125;\n  ]\n&#125;\nEOF\n\ncfssl gencert -ca&#x3D;ca.pem -ca-key&#x3D;ca-key.pem -config&#x3D;ca-config.json -hostname&#x3D;$2 -profile&#x3D;server server-csr.json | cfssljson -bare server\n\necho &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; ca.pem &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;\ncat ca.pem\necho &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; server.pem &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;\ncat server.pem\necho &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; server-key.pem &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;\ncat server-key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","categories":["开发"],"tags":["k8s"]},{"title":"Golang字符串操作","url":"/2021/07/19/Golang%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/","content":"<p>Golang字符串操作</p>\n<span id=\"more\"></span>\n\n<h4 id=\"包含\"><a href=\"#包含\" class=\"headerlink\" title=\"包含\"></a>包含</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">strings<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I'll chop up this carrot\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"carrot\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>包含返回true</p>\n<h4 id=\"替换\"><a href=\"#替换\" class=\"headerlink\" title=\"替换\"></a>替换</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">strings<span class=\"token punctuation\">.</span><span class=\"token function\">ReplaceAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"one night of love\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"all\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"保留两位小数\"><a href=\"#保留两位小数\" class=\"headerlink\" title=\"保留两位小数\"></a>保留两位小数</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">decimal</span><span class=\"token punctuation\">(</span>value <span class=\"token builtin\">float64</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">float64</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">return</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">Trunc</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">*</span><span class=\"token number\">1e2</span><span class=\"token operator\">+</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1e-2</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"分割字符串\"><a href=\"#分割字符串\" class=\"headerlink\" title=\"分割字符串\"></a>分割字符串</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">s1 <span class=\"token operator\">:=</span> <span class=\"token string\">\"Shello-worldP\"</span>\ns2 <span class=\"token operator\">:=</span> s1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token punctuation\">:</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\necho<span class=\"token punctuation\">:</span> hello<span class=\"token operator\">-</span>world<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"字符串大小写\"><a href=\"#字符串大小写\" class=\"headerlink\" title=\"字符串大小写\"></a>字符串大小写</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// ToUpper 将 s 中的所有字符修改为其大写格式</span>\nus <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">ToUpper</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ToLower 将 s 中的所有字符修改为其小写格式</span>\nls <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">ToLower</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"切割字符串\"><a href=\"#切割字符串\" class=\"headerlink\" title=\"切割字符串\"></a>切割字符串</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"># strings<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>函数用于将指定的分隔符切割字符串，并返回切割后的字符串切片。\n\ndemo <span class=\"token operator\">:=</span> <span class=\"token string\">\"I&amp;love&amp;Go,&amp;and&amp;I&amp;also&amp;love&amp;Python.\"</span>\nstring_slice <span class=\"token operator\">:=</span> strings<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span>demo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&amp;\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result:\"</span><span class=\"token punctuation\">,</span>string_slice<span class=\"token punctuation\">)</span>\n# result<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>I love Go<span class=\"token punctuation\">,</span> and I also love Python<span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","tags":["golang"]},{"title":"kubeadm的脚本部署","url":"/2021/07/19/kubeadm%E7%9A%84%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2/","content":"<p>一键部署kubeadm脚本</p>\n<span id=\"more\"></span>\n\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\"># master: 安装docker、kubeadm、kubectl、kubelet、flannel\n\nif (( $# !&#x3D; 1 )); then\n  echo -e &quot;\\033[31m参数个数有误，请重新输入\\033[0m&quot;\n  echo -e &quot;\\033[31m脚本为安装kubeadm使用，你可以通过参数来选择node节点、master节点\\033[0m&quot;\n  return 0 \nfi\n###############\n#   docker    #\n###############\n\n# 安装依赖包\nsudo yum install -y yum-utils\n\n# 鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。\n# 执行下面的命令添加 yum 软件源\nsudo yum-config-manager \\\n    --add-repo \\\n    https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo\n\nsudo sed -i &#39;s&#x2F;download.docker.com&#x2F;mirrors.aliyun.com\\&#x2F;docker-ce&#x2F;g&#39; &#x2F;etc&#x2F;yum.repos.d&#x2F;docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n#     --add-repo \\\n#     https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo\n\n\n# 更新 yum 软件源缓存，并安装 docker-ce\nsudo yum install -y docker-ce docker-ce-cli containerd.io\n\n# 测试 Docker 是否安装正确\n# docker run --rm hello-world\n\n# 阿里云镜像加速\nmkdir -p &#x2F;etc&#x2F;docker\ncat &gt;&#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt; EOF\n&#123;\n  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;9yepy6z6.mirror.aliyuncs.com&quot;]\n&#125;\nEOF\n\n# 启动 Docker\nsudo systemctl enable docker\nsudo systemctl start docker\nsudo systemctl status docker\n# sudo systemctl daemon-reload\n# sudo systemctl restart docker\n\n\n###############\n#   kubeadm   #\n###############\n\n# 关闭 swap 分区\nswapoff  -a\nsed -ri &#39;s&#x2F;.*swap.*&#x2F;#&amp;&#x2F;&#39; &#x2F;etc&#x2F;fstab\n\n# 安装 kubelet kubeadm kubectl\ncat &lt;&lt;EOF | sudo tee &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo\n[kubernetes]\nname&#x3D;Kubernetes\nbaseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64&#x2F;\nenabled&#x3D;1\ngpgcheck&#x3D;1\nrepo_gpgcheck&#x3D;1\ngpgkey&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg\nEOF\n\nsudo yum install -y kubelet kubeadm kubectl\n\n# 修改内核的运行参数\ncat &lt;&lt;EOF | sudo tee &#x2F;etc&#x2F;sysctl.d&#x2F;99-kubernetes-cri.conf\nnet.bridge.bridge-nf-call-iptables  &#x3D; 1\nnet.ipv4.ip_forward                 &#x3D; 1\nnet.bridge.bridge-nf-call-ip6tables &#x3D; 1\nEOF\n\nsysctl --system\n\nsystemctl start kubelet.service\n# 这里可能没有kubelet.service.d目录，可以手动创建\ncd &#x2F;etc&#x2F;systemd&#x2F;system\nmkdir kubelet.service.d\ncat &gt; &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;kubelet.service.d&#x2F;10-proxy-ipvs.conf &lt;&lt;EOF\n# 启用 ipvs 相关内核模块\n[Service]\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs_rr\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs_wrr\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs_sh\nEOF\n\n\n###############\n#     部署     #\n###############\n\n# master\nif [ $1 &#x3D;&#x3D; &quot;master&quot; ]; then\n# --pod-network-cidr 10.244.0.0&#x2F;16 参数与后续 CNI 插件有关，这里以 flannel 为例，若后续部署其他类型的网络插件请更改此参数。\n# 执行可能出现错误，例如缺少依赖包，根据提示安装即可。\nsudo kubeadm init --image-repository registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers \\\n      --pod-network-cidr 10.244.0.0&#x2F;16 \\\n      --v 5 \\\n      --ignore-preflight-errors&#x3D;all\n\n# 部署 CNI\n# 这里以 flannel 为例进行介绍。\n# flannel\ncurl -O https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;master&#x2F;Documentation&#x2F;kube-flannel.yml\nkubectl apply -f  kube-flannel.yml\n\n\n# 使用kubectl访问集群\nmkdir -p $HOME&#x2F;.kube\ncp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config\n\n###############\n#   flannel   #\n###############\ncurl -O https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;master&#x2F;Documentation&#x2F;kube-flannel.yml\nkubectl apply -f  kube-flannel.yml\n# 这里注意kube-flannel.yml这个文件里的flannel的镜像是0.11.0，quay.io&#x2F;coreos&#x2F;flannel:v0.11.0-amd64\n\nelif [ $1 &#x3D;&#x3D; &quot;node&quot; ]; then\nmodprobe br_netfilter\necho 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;bridge&#x2F;bridge-nf-call-iptables\necho 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward\n\nkubeadm join 10.23.239.33:6443 --token enmicf.mfsf34hx54swtrkr \\\n    --discovery-token-ca-cert-hash sha256:0456ad35df4cbff8d5ca6ced7f34cc21c3ed4e3674989eb2e4545e55ec252f00\nfi\n\n\n# 执行以下命令应用配置。\nsudo systemctl daemon-reload\n\nsystemctl enable kubelet.service\nsystemctl restart kubelet.service\nsystemctl status kubelet.service\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","tags":["k8s"]},{"title":"如何写一个systemd服务","url":"/2021/07/19/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AAsystemd%E6%9C%8D%E5%8A%A1/","content":"<p>如何写一个systemd服务</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">[Unit]\nDescription&#x3D;yuru-web   \t\t# 简单描述服务\nAfter&#x3D;network.target    # 描述服务类别，表示本服务需要在network服务启动后在启动\n\n[Service]\nWorkingDirectory&#x3D;&#x2F;root&#x2F;xiaoxie&#x2F;web\nExecStart&#x3D;&#x2F;root&#x2F;xiaoxie&#x2F;web&#x2F;yuru-web    \t# 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking）\n\n[Install]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"模版\"><a href=\"#模版\" class=\"headerlink\" title=\"模版\"></a>模版</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">[Unit]\nDescription&#x3D;test   \t\t# 简单描述服务\nAfter&#x3D;network.target    # 描述服务类别，表示本服务需要在network服务启动后在启动\nBefore&#x3D;xxx.service      # 表示需要在某些服务启动之前启动，After和Before字段只涉及启动顺序，不涉及依赖关系。\n\n[Service]\nType&#x3D;forking     \t\t# 设置服务的启动方式\nUser&#x3D;USER        \t\t# 设置服务运行的用户\nGroup&#x3D;USER       \t\t# 设置服务运行的用户组\nWorkingDirectory&#x3D;&#x2F;PATH\t# 设置服务运行的路径(cwd)\nKillMode&#x3D;control-group  # 定义systemd如何停止服务\nRestart&#x3D;no        \t\t# 定义服务进程退出后，systemd的重启方式，默认是不重启\nExecStart&#x3D;&#x2F;start.sh    \t# 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking）\n\n[Install]\nWantedBy&#x3D;multi-user.target  # 多用户<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"保存目录\"><a href=\"#保存目录\" class=\"headerlink\" title=\"保存目录\"></a>保存目录</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">&#x2F;etc&#x2F;systemd&#x2F;system\n&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;vsftpd.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"重载\"><a href=\"#重载\" class=\"headerlink\" title=\"重载\"></a>重载</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">systemctl daemon-reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>","tags":["linux"]},{"title":"operator-sdk如何使用","url":"/2021/07/20/operator-sdk%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8/","content":"<h2 id=\"operator-sdk-如何使用\"><a href=\"#operator-sdk-如何使用\" class=\"headerlink\" title=\"operator-sdk 如何使用\"></a>operator-sdk 如何使用</h2><span id=\"more\"></span>\n\n<h5 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h5><p>operator-sdk版本：</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">operator-sdk version\noperator-sdk version: &quot;v1.9.0-2-g9fa13f31&quot;, commit: &quot;9fa13f31e2b265253c105315ee12cc439e7b4174&quot;, kubernetes version: &quot;v1.20.2&quot;, go version: &quot;go1.16.2&quot;, GOOS: &quot;darwin&quot;, GOARCH: &quot;arm64&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>开发环境：MacOs</p>\n<h5 id=\"我们首先进入一个项目，对项目进行初始化。\"><a href=\"#我们首先进入一个项目，对项目进行初始化。\" class=\"headerlink\" title=\"我们首先进入一个项目，对项目进行初始化。\"></a>我们首先进入一个项目，对项目进行初始化。</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">operator-sdk init<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"创建一个资源对象-MultiService\"><a href=\"#创建一个资源对象-MultiService\" class=\"headerlink\" title=\"创建一个资源对象 MultiService\"></a>创建一个资源对象 MultiService</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">operator-sdk create api --group kun.multiservice --version v1 --kind MultiService --resource&#x3D;true --controller&#x3D;true --namespaced&#x3D;true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"对Spec字段进行更改，将MultiService结构体改为\"><a href=\"#对Spec字段进行更改，将MultiService结构体改为\" class=\"headerlink\" title=\"对Spec字段进行更改，将MultiService结构体改为\"></a>对Spec字段进行更改，将MultiService结构体改为</h5><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> MultiServiceSpec <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n    Service <span class=\"token builtin\">string</span> <span class=\"token string\">`json:\"service,omitempty\"`</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"更新CRD文件：\"><a href=\"#更新CRD文件：\" class=\"headerlink\" title=\"更新CRD文件：\"></a>更新CRD文件：</h5><pre class=\"line-numbers language-none\"><code class=\"language-none\">make manifests<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h5><p>Operator SDK 为我们创建了一个快速启动的代码和相关配置，如果我们要开始处理相关的逻辑，我们可以在项目中搜索TODO(user)这个注释来实现我们自己的逻辑，比如在我的 VSCode 环境中，看上去是这样的：</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span>MultiService4Reconciler<span class=\"token punctuation\">)</span> <span class=\"token function\">Reconcile</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> req ctrl<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token boolean\">_</span> <span class=\"token operator\">=</span> log<span class=\"token punctuation\">.</span><span class=\"token function\">FromContext</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// your logic here</span>\n    <span class=\"token keyword\">return</span> ctrl<span class=\"token punctuation\">.</span>Result<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h5><p>operator-sdk 不同版本之间的命令行参数有很多不同，如果本文与你的环境有差异，请移步<a href=\"https://sdk.operatorframework.io/\">operator-sdk官网</a></p>\n","tags":["开发"]},{"title":"Golang连接Shell","url":"/2021/07/19/Golang%E8%BF%9E%E6%8E%A5Shell/","content":"<p>Golang 连接 Shell</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        command <span class=\"token operator\">:=</span> <span class=\"token string\">`./git-back.sh .`</span>\n        cmd <span class=\"token operator\">:=</span> exec<span class=\"token punctuation\">.</span><span class=\"token function\">Command</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/bash\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">)</span>\n\n        err <span class=\"token operator\">:=</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n                fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Execute Command failed:\"</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Execute Command finished.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","tags":["golang"]},{"title":"部署Rancher","url":"/2021/07/20/%E9%83%A8%E7%BD%B2Rancher/","content":"<p>rancer是一个多k8s集群管理工具</p>\n<span id=\"more\"></span>\n\n<h2 id=\"在k8s集群里安装\"><a href=\"#在k8s集群里安装\" class=\"headerlink\" title=\"在k8s集群里安装\"></a>在k8s集群里安装</h2><p>直接部署在k8s中具备高可用</p>\n<p>中文官方<a href=\"https://www.rancher.cn/\">https://www.rancher.cn</a></p>\n<p>英文官网<a href=\"https://rancher.com/\">https://rancher.com</a></p>\n<h4 id=\"rancher需要cert-manager\"><a href=\"#rancher需要cert-manager\" class=\"headerlink\" title=\"rancher需要cert-manager\"></a><font color=red>rancher需要cert-manager</font></h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\"># 添加helm仓库\nhelm repo add jetstack https:&#x2F;&#x2F;charts.jetstack.io\n\n# 更新仓库\nhelm repo update\n\n# 创建cert-manager的namespace\nkubectl create namespace cert-manager\n\n# 使用helm安装cert-manager\nhelm install \\\n cert-manager jetstack&#x2F;cert-manager \\\n --namespace cert-manager \\\n --version v1.0.3 \\\n --set installCRDs&#x3D;true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"使用helm安装rancher\"><a href=\"#使用helm安装rancher\" class=\"headerlink\" title=\"使用helm安装rancher\"></a>使用helm安装rancher</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\"># 添加rancher的repo仓库，这里是用latest，生产环境推荐使用stable，尝鲜使用alpha\nhelm repo add rancher-latest http:&#x2F;&#x2F;rancher-mirror.oss-cn-beijing.aliyuncs.com&#x2F;server-charts&#x2F;latest\n\n# 为rancher创建namespace\nkubectl create namespace cattle-system\n\n# 安装rancher\nhelm install rancher rancher-latest&#x2F;rancher \\\n --namespace cattle-system \\\n--set hostname&#x3D;&lt;域名&gt;\n# 域名随便填写<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"单节点安装\"><a href=\"#单节点安装\" class=\"headerlink\" title=\"单节点安装\"></a>单节点安装</h4><p>作为一个单独的程序管理其他的集群</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">docker run -d --restart&#x3D;unless-stopped \\\n  -p 80:80 -p 443:443 \\\n  -v &#x2F;data&#x2F;rancher:&#x2F;var&#x2F;lib&#x2F;rancher&#x2F; \\\n  -v &#x2F;data&#x2F;rancher&#x2F;log&#x2F;auditlog:&#x2F;var&#x2F;log&#x2F;auditlog \\\n  -e CATTLE_SYSTEM_CATALOG&#x3D;bundled \\\n  -e AUDIT_LEVEL&#x3D;3 \\\n rancher&#x2F;rancher:stable --no-cacerts<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"404","url":"//404.html","content":"<pre class=\"line-numbers language-none\"><code class=\"language-none\">██╗  ██╗ ██████╗ ██╗  ██╗    ███╗   ██╗ ██████╗ ████████╗\n██║  ██║██╔═████╗██║  ██║    ████╗  ██║██╔═══██╗╚══██╔══╝\n███████║██║██╔██║███████║    ██╔██╗ ██║██║   ██║   ██║\n╚════██║████╔╝██║╚════██║    ██║╚██╗██║██║   ██║   ██║\n     ██║╚██████╔╝     ██║    ██║ ╚████║╚██████╔╝   ██║\n     ╚═╝ ╚═════╝      ╚═╝    ╚═╝  ╚═══╝ ╚═════╝    ╚═╝\n\n    ███████╗ ██████╗ ██╗   ██╗███╗   ██╗██████╗\n    ██╔════╝██╔═══██╗██║   ██║████╗  ██║██╔══██╗\n    █████╗  ██║   ██║██║   ██║██╔██╗ ██║██║  ██║\n    ██╔══╝  ██║   ██║██║   ██║██║╚██╗██║██║  ██║\n    ██║     ╚██████╔╝╚██████╔╝██║ ╚████║██████╔╝\n    ╚═╝      ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═════╝<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"},{"title":"about","url":"/about/index.html","content":"<p>随着年纪的增长和技术解除的越来越多<br>有些东西记不太住<br>遂用此博客记录解决问题的过程和方法</p>\n"},{"title":"文章分类","url":"/categories/index.html","content":""},{"title":"tags","url":"/tags/index.html","content":""}]