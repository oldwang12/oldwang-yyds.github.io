[{"title":"Golang连接Mysql","url":"/2021/07/19/Golang%E8%BF%9E%E6%8E%A5mysql/","content":"<p>Golang 连接 Mysql</p>\n<span id=\"more\"></span>\n\n<p>注意：如果不使用 dn.Ping()，无法验证是否可以 ping 通 mysql</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"database/sql\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"log\"</span>\n\n    <span class=\"token boolean\">_</span> <span class=\"token string\">\"github.com/go-sql-driver/mysql\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>\n    username <span class=\"token operator\">=</span> <span class=\"token string\">\"root\"</span>\n    passward <span class=\"token operator\">=</span> <span class=\"token string\">\"123456\"</span>\n    network  <span class=\"token operator\">=</span> <span class=\"token string\">\"tcp\"</span>\n    host     <span class=\"token operator\">=</span> <span class=\"token string\">\"113.31.106.132\"</span>\n    port     <span class=\"token operator\">=</span> <span class=\"token number\">3306</span>\n    database <span class=\"token operator\">=</span> <span class=\"token string\">\"lee\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    dsn <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s:%s@%s(%s:%d)/%s\"</span><span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> passward<span class=\"token punctuation\">,</span> network<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> database<span class=\"token punctuation\">)</span>\n\n    db<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> sql<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">,</span> dsn<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Open mysql failed,err:%v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">defer</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    err <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">Ping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Open mysql succeed\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","tags":["golang"]},{"title":"kubeadm的脚本部署","url":"/2021/07/19/kubeadm%E7%9A%84%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2/","content":"<p>一键部署kubeadm脚本</p>\n<span id=\"more\"></span>\n\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\"># master: 安装docker、kubeadm、kubectl、kubelet、flannel\n\nif (( $# !&#x3D; 1 )); then\n  echo -e &quot;\\033[31m参数个数有误，请重新输入\\033[0m&quot;\n  echo -e &quot;\\033[31m脚本为安装kubeadm使用，你可以通过参数来选择node节点、master节点\\033[0m&quot;\n  return 0 \nfi\n###############\n#   docker    #\n###############\n\n# 安装依赖包\nsudo yum install -y yum-utils\n\n# 鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。\n# 执行下面的命令添加 yum 软件源\nsudo yum-config-manager \\\n    --add-repo \\\n    https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo\n\nsudo sed -i &#39;s&#x2F;download.docker.com&#x2F;mirrors.aliyun.com\\&#x2F;docker-ce&#x2F;g&#39; &#x2F;etc&#x2F;yum.repos.d&#x2F;docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n#     --add-repo \\\n#     https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo\n\n\n# 更新 yum 软件源缓存，并安装 docker-ce\nsudo yum install -y docker-ce docker-ce-cli containerd.io\n\n# 测试 Docker 是否安装正确\n# docker run --rm hello-world\n\n# 阿里云镜像加速\nmkdir -p &#x2F;etc&#x2F;docker\ncat &gt;&#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt; EOF\n&#123;\n  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;9yepy6z6.mirror.aliyuncs.com&quot;]\n&#125;\nEOF\n\n# 启动 Docker\nsudo systemctl enable docker\nsudo systemctl start docker\nsudo systemctl status docker\n# sudo systemctl daemon-reload\n# sudo systemctl restart docker\n\n\n###############\n#   kubeadm   #\n###############\n\n# 关闭 swap 分区\nswapoff  -a\nsed -ri &#39;s&#x2F;.*swap.*&#x2F;#&amp;&#x2F;&#39; &#x2F;etc&#x2F;fstab\n\n# 安装 kubelet kubeadm kubectl\ncat &lt;&lt;EOF | sudo tee &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo\n[kubernetes]\nname&#x3D;Kubernetes\nbaseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64&#x2F;\nenabled&#x3D;1\ngpgcheck&#x3D;1\nrepo_gpgcheck&#x3D;1\ngpgkey&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg\nEOF\n\nsudo yum install -y kubelet kubeadm kubectl\n\n# 修改内核的运行参数\ncat &lt;&lt;EOF | sudo tee &#x2F;etc&#x2F;sysctl.d&#x2F;99-kubernetes-cri.conf\nnet.bridge.bridge-nf-call-iptables  &#x3D; 1\nnet.ipv4.ip_forward                 &#x3D; 1\nnet.bridge.bridge-nf-call-ip6tables &#x3D; 1\nEOF\n\nsysctl --system\n\nsystemctl start kubelet.service\n# 这里可能没有kubelet.service.d目录，可以手动创建\ncd &#x2F;etc&#x2F;systemd&#x2F;system\nmkdir kubelet.service.d\ncat &gt; &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;kubelet.service.d&#x2F;10-proxy-ipvs.conf &lt;&lt;EOF\n# 启用 ipvs 相关内核模块\n[Service]\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs_rr\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs_wrr\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe ip_vs_sh\nEOF\n\n\n###############\n#     部署     #\n###############\n\n# master\nif [ $1 &#x3D;&#x3D; &quot;master&quot; ]; then\n# --pod-network-cidr 10.244.0.0&#x2F;16 参数与后续 CNI 插件有关，这里以 flannel 为例，若后续部署其他类型的网络插件请更改此参数。\n# 执行可能出现错误，例如缺少依赖包，根据提示安装即可。\nsudo kubeadm init --image-repository registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers \\\n      --pod-network-cidr 10.244.0.0&#x2F;16 \\\n      --v 5 \\\n      --ignore-preflight-errors&#x3D;all\n\n# 部署 CNI\n# 这里以 flannel 为例进行介绍。\n# flannel\ncurl -O https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;master&#x2F;Documentation&#x2F;kube-flannel.yml\nkubectl apply -f  kube-flannel.yml\n\n\n# 使用kubectl访问集群\nmkdir -p $HOME&#x2F;.kube\ncp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config\n\n###############\n#   flannel   #\n###############\ncurl -O https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;master&#x2F;Documentation&#x2F;kube-flannel.yml\nkubectl apply -f  kube-flannel.yml\n# 这里注意kube-flannel.yml这个文件里的flannel的镜像是0.11.0，quay.io&#x2F;coreos&#x2F;flannel:v0.11.0-amd64\n\nelif [ $1 &#x3D;&#x3D; &quot;node&quot; ]; then\nmodprobe br_netfilter\necho 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;bridge&#x2F;bridge-nf-call-iptables\necho 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward\n\nkubeadm join 10.23.239.33:6443 --token enmicf.mfsf34hx54swtrkr \\\n    --discovery-token-ca-cert-hash sha256:0456ad35df4cbff8d5ca6ced7f34cc21c3ed4e3674989eb2e4545e55ec252f00\nfi\n\n\n# 执行以下命令应用配置。\nsudo systemctl daemon-reload\n\nsystemctl enable kubelet.service\nsystemctl restart kubelet.service\nsystemctl status kubelet.service\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"Golang连接 HTML","url":"/2021/07/19/Golang%E8%BF%9E%E6%8E%A5HTML/","content":"<p>Golang 连接 HTML</p>\n<span id=\"more\"></span>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        fs <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">FileServer</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span><span class=\"token function\">Dir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yuru/html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> fs<span class=\"token punctuation\">)</span>\n\n        err <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":80\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n                log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ListenAndServe: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"k8s为服务签发证书","url":"/2021/07/19/k8s%E4%B8%BA%E6%9C%8D%E5%8A%A1%E7%AD%BE%E5%8F%91%E8%AF%81%E4%B9%A6/","content":"<p>仅限于集群服务制作证书。</p>\n<span id=\"more\"></span>\n\n<h4 id=\"制作证书脚本\"><a href=\"#制作证书脚本\" class=\"headerlink\" title=\"制作证书脚本\"></a>制作证书脚本</h4><p>注意：仅限于集群服务制作证书，必须填入参数。参数1为文件夹名，参数2为 集群服务 dogbrother.prj-lee-sin.svc</p>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">mkdir $1\ncd $1\n\ncat &gt; ca-config.json &lt;&lt;EOF\n&#123;\n  &quot;signing&quot;: &#123;\n    &quot;default&quot;: &#123;\n      &quot;expiry&quot;: &quot;8760h&quot;\n    &#125;,\n    &quot;profiles&quot;: &#123;\n      &quot;server&quot;: &#123;\n        &quot;usages&quot;: [&quot;signing&quot;, &quot;key encipherment&quot;, &quot;server auth&quot;, &quot;client auth&quot;],\n        &quot;expiry&quot;: &quot;8760h&quot;\n      &#125;\n    &#125;\n  &#125;\n&#125;\nEOF\n\ncat &gt; ca-csr.json &lt;&lt;EOF\n&#123;\n    &quot;CN&quot;: &quot;kubernetes&quot;,\n    &quot;key&quot;: &#123;\n        &quot;algo&quot;: &quot;rsa&quot;,\n        &quot;size&quot;: 2048\n    &#125;,\n    &quot;names&quot;: [\n        &#123;\n            &quot;C&quot;: &quot;CN&quot;,\n            &quot;L&quot;: &quot;BeiJing&quot;,\n            &quot;ST&quot;: &quot;BeiJing&quot;,\n            &quot;O&quot;: &quot;k8s&quot;,\n            &quot;OU&quot;: &quot;System&quot;\n        &#125;\n    ]\n&#125;\nEOF\n\ncfssl gencert -initca ca-csr.json | cfssljson -bare ca\n\ncat &gt; server-csr.json &lt;&lt;EOF\n&#123;\n  &quot;CN&quot;: &quot;admission&quot;,\n  &quot;key&quot;: &#123;\n    &quot;algo&quot;: &quot;rsa&quot;,\n    &quot;size&quot;: 2048\n  &#125;,\n  &quot;names&quot;: [\n    &#123;\n        &quot;C&quot;: &quot;CN&quot;,\n        &quot;L&quot;: &quot;BeiJing&quot;,\n        &quot;ST&quot;: &quot;BeiJing&quot;,\n        &quot;O&quot;: &quot;k8s&quot;,\n        &quot;OU&quot;: &quot;System&quot;\n    &#125;\n  ]\n&#125;\nEOF\n\ncfssl gencert -ca&#x3D;ca.pem -ca-key&#x3D;ca-key.pem -config&#x3D;ca-config.json -hostname&#x3D;$2 -profile&#x3D;server server-csr.json | cfssljson -bare server\n\necho &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; ca.pem &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;\ncat ca.pem\necho &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; server.pem &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;\ncat server.pem\necho &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; server-key.pem &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;\ncat server-key.pem<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","categories":["开发"],"tags":["k8s"]},{"title":"Golang连接Redis","url":"/2021/07/19/Golang%E8%BF%9E%E6%8E%A5Redis/","content":"<p>Golang 连接 Redis</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"sync\"</span>\n    <span class=\"token string\">\"time\"</span>\n\n    <span class=\"token string\">\"git.ucloudadmin.com/kun/appshop/pkg/log\"</span>\n    <span class=\"token string\">\"gopkg.in/redis.v4\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    client <span class=\"token operator\">:=</span> <span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">defer</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">stringOperation</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">listOperation</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">//    setOperation(client)</span>\n    <span class=\"token comment\">//    hashOperation(client)</span>\n\n    <span class=\"token function\">connectPool</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 创建 redis 客户端</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client <span class=\"token punctuation\">&#123;</span>\n    client <span class=\"token operator\">:=</span> redis<span class=\"token punctuation\">.</span><span class=\"token function\">NewClient</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>redis<span class=\"token punctuation\">.</span>Options<span class=\"token punctuation\">&#123;</span>\n        Addr<span class=\"token punctuation\">:</span>     <span class=\"token string\">\"localhost:6379\"</span><span class=\"token punctuation\">,</span>\n        Password<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        DB<span class=\"token punctuation\">:</span>       <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        PoolSize<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n    pong<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Ping</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">,</span> <span class=\"token string\">\" pong: \"</span><span class=\"token punctuation\">,</span> pong<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">return</span> client\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// String 操作</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">stringOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stringOperation\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 第三个参数设置过期时间, 如果是 0, 则表示没有过期时间</span>\n    err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">*</span>time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">Incr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 自增</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">Incr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 自增</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">Decr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 自减</span>\n\n    val<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span> <span class=\"token comment\">// age 的值为21</span>\n\n    <span class=\"token comment\">// 因为 key \"age\" 的过期时间是一秒钟, 因此当一秒后, 此 key 会自动被删除了.</span>\n    time<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> time<span class=\"token punctuation\">.</span>Second<span class=\"token punctuation\">)</span>\n    val<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error: %v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 因为 key \"age\" 已经过期了, 因此会有一个 redis: nil 的错误.</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"过期后 age: \"</span><span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">listOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"listOperation\"</span><span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------------------\"</span><span class=\"token punctuation\">)</span>\n\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">RPush</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">)</span>               <span class=\"token comment\">// 在名称为 fruit 的list尾添加一个值为value的元素</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">LPush</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">// 在名称为 fruit 的list头添加一个值为value的 元素</span>\n    length<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">LLen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 返回名称为 fruit 的list的长度</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit list length: \"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 长度为2</span>\n\n    value<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">LPop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//返回并删除名称为 fruit 的list中的首元素</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit: \"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n\n    value<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">RPop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 返回并删除名称为 fruit 的list中的尾元素</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"err: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit: \"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruit list length: \"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 长度为2</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// set 操作</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">setOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Obama\"</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 向 blacklist 中添加元素</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hillary\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 再次添加</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"the Elder\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 添加新元素</span>\n\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">SAdd</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"whitelist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"the Elder\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 向 whitelist 添加元素</span>\n\n    <span class=\"token comment\">// 判断元素是否在集合中</span>\n    isMember<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">SIsMember</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Bush\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Is Bush in blacklist: \"</span><span class=\"token punctuation\">,</span> isMember<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 求交集, 即既在黑名单中, 又在白名单中的元素</span>\n    names<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">SInter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"whitelist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 获取到的元素是 \"the Elder\"</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Inter result: \"</span><span class=\"token punctuation\">,</span> names<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 获取指定集合的所有元素</span>\n    all<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">SMembers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blacklist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"All member: \"</span><span class=\"token punctuation\">,</span> all<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// hash 操作</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">hashOperation</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_xys\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"xys\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 向名称为 user_xys 的 hash 中添加元素 name</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_xys\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"18\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 向名称为 user_xys 的 hash 中添加元素 age</span>\n\n    <span class=\"token comment\">// 批量地向名称为 user_test 的 hash 中添加元素 name 和 age</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HMSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 批量获取名为 user_test 的 hash 中的指定字段的值.</span>\n    fields<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">HMGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fields in user_test: \"</span><span class=\"token punctuation\">,</span> fields<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// 获取名为 user_xys 的 hash 中的字段个数</span>\n    length<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">HLen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_xys\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"field count in user_xys: \"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 字段个数为2</span>\n\n    <span class=\"token comment\">// 删除名为 user_test 的 age 字段</span>\n    client<span class=\"token punctuation\">.</span><span class=\"token function\">HDel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span>\n    age<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">HGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Get user_test age error: %v\\n\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user_test age is: \"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 字段个数为2</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// redis.v4 的连接池管理</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">connectPool</span><span class=\"token punctuation\">(</span>client <span class=\"token operator\">*</span>redis<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    wg <span class=\"token operator\">:=</span> sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">defer</span> wg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">for</span> j <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n                client<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name%d\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xys%d\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                client<span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name%d\"</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token comment\">//    fmt.Printf(\"PoolStats, TotalConns: %d, FreeConns: %d\\n\", client.PoolStats().TotalConns, client.PoolStats().FreeConns)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    wg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","tags":["golang"]},{"title":"Golang连接Email","url":"/2021/07/19/Golang%E8%BF%9E%E6%8E%A5Email/","content":"<p>Golang 连接 Email</p>\n<span id=\"more\"></span>\n\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"crypto/tls\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"strconv\"</span>\n\n    <span class=\"token string\">\"git.ucloudadmin.com/leesin/email/html\"</span>\n    log <span class=\"token string\">\"github.com/gogap/logrus\"</span>\n    <span class=\"token string\">\"gopkg.in/gomail.v2\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">SendMail</span><span class=\"token punctuation\">(</span>mailTo <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> subject <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> body <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//定义邮箱服务器连接信息，如果是阿里邮箱 pass填密码，qq邮箱填授权码</span>\n    mailConn <span class=\"token operator\">:=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"806459794@qq.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pass\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"授权码\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"host\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"smtp.qq.com\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"port\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"25\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    port<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span>mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"port\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//转换端口类型为int</span>\n    m <span class=\"token operator\">:=</span> gomail<span class=\"token punctuation\">.</span><span class=\"token function\">NewMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"From\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yw\"</span><span class=\"token operator\">+</span><span class=\"token string\">\"&lt;\"</span><span class=\"token operator\">+</span>mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//这种方式可以添加别名，即“XD Game”， 也可以直接用&lt;code>m.SetHeader(\"From\",mailConn[\"user\"])&lt;/code> 读者可以自行实验下效果</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"To\"</span><span class=\"token punctuation\">,</span> mailTo<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>                       <span class=\"token comment\">//发送给多个用户</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Subject\"</span><span class=\"token punctuation\">,</span> subject<span class=\"token punctuation\">)</span>                    <span class=\"token comment\">//设置邮件主题</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">SetBody</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/html\"</span><span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span>                       <span class=\"token comment\">//设置邮件正文</span>\n    d <span class=\"token operator\">:=</span> gomail<span class=\"token punctuation\">.</span><span class=\"token function\">NewDialer</span><span class=\"token punctuation\">(</span>mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"host\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> mailConn<span class=\"token punctuation\">[</span><span class=\"token string\">\"pass\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    d<span class=\"token punctuation\">.</span>TLSConfig <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>tls<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">&#123;</span>InsecureSkipVerify<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span>\n    err <span class=\"token operator\">:=</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">DialAndSend</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> err\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    subject <span class=\"token operator\">:=</span> <span class=\"token string\">\"Dobrother 运营日报\"</span>\n    body <span class=\"token operator\">:=</span> html<span class=\"token punctuation\">.</span><span class=\"token function\">LoadHtml</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// html.LoadHtml load html, return type string</span>\n\n    err <span class=\"token operator\">:=</span> <span class=\"token function\">SendMail</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">.</span>MailTo<span class=\"token punctuation\">,</span> subject<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"邮件发送失败： \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> html<span class=\"token punctuation\">.</span>MailTo <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"邮件成功发送至管理员: \"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"如何写一个systemd服务","url":"/2021/07/19/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AAsystemd%E6%9C%8D%E5%8A%A1/","content":"<p>如何写一个systemd服务</p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">[Unit]\nDescription&#x3D;yuru-web   \t\t# 简单描述服务\nAfter&#x3D;network.target    # 描述服务类别，表示本服务需要在network服务启动后在启动\n\n[Service]\nWorkingDirectory&#x3D;&#x2F;root&#x2F;xiaoxie&#x2F;web\nExecStart&#x3D;&#x2F;root&#x2F;xiaoxie&#x2F;web&#x2F;yuru-web    \t# 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking）\n\n[Install]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"模版\"><a href=\"#模版\" class=\"headerlink\" title=\"模版\"></a>模版</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">[Unit]\nDescription&#x3D;test   \t\t# 简单描述服务\nAfter&#x3D;network.target    # 描述服务类别，表示本服务需要在network服务启动后在启动\nBefore&#x3D;xxx.service      # 表示需要在某些服务启动之前启动，After和Before字段只涉及启动顺序，不涉及依赖关系。\n\n[Service]\nType&#x3D;forking     \t\t# 设置服务的启动方式\nUser&#x3D;USER        \t\t# 设置服务运行的用户\nGroup&#x3D;USER       \t\t# 设置服务运行的用户组\nWorkingDirectory&#x3D;&#x2F;PATH\t# 设置服务运行的路径(cwd)\nKillMode&#x3D;control-group  # 定义systemd如何停止服务\nRestart&#x3D;no        \t\t# 定义服务进程退出后，systemd的重启方式，默认是不重启\nExecStart&#x3D;&#x2F;start.sh    \t# 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking）\n\n[Install]\nWantedBy&#x3D;multi-user.target  # 多用户<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"保存目录\"><a href=\"#保存目录\" class=\"headerlink\" title=\"保存目录\"></a>保存目录</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">&#x2F;etc&#x2F;systemd&#x2F;system\n&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;vsftpd.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"重载\"><a href=\"#重载\" class=\"headerlink\" title=\"重载\"></a>重载</h4><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">systemctl daemon-reload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>","tags":["linux"]},{"title":"about","url":"/about/index.html","content":"<p>随着年纪的增长和技术解除的越来越多<br>有些东西记不太住<br>遂用此博客记录解决问题的过程和方法</p>\n"},{"title":"404","url":"//404.html","content":"<pre class=\"line-numbers language-none\"><code class=\"language-none\">██╗  ██╗ ██████╗ ██╗  ██╗    ███╗   ██╗ ██████╗ ████████╗\n██║  ██║██╔═████╗██║  ██║    ████╗  ██║██╔═══██╗╚══██╔══╝\n███████║██║██╔██║███████║    ██╔██╗ ██║██║   ██║   ██║\n╚════██║████╔╝██║╚════██║    ██║╚██╗██║██║   ██║   ██║\n     ██║╚██████╔╝     ██║    ██║ ╚████║╚██████╔╝   ██║\n     ╚═╝ ╚═════╝      ╚═╝    ╚═╝  ╚═══╝ ╚═════╝    ╚═╝\n\n    ███████╗ ██████╗ ██╗   ██╗███╗   ██╗██████╗\n    ██╔════╝██╔═══██╗██║   ██║████╗  ██║██╔══██╗\n    █████╗  ██║   ██║██║   ██║██╔██╗ ██║██║  ██║\n    ██╔══╝  ██║   ██║██║   ██║██║╚██╗██║██║  ██║\n    ██║     ╚██████╔╝╚██████╔╝██║ ╚████║██████╔╝\n    ╚═╝      ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═════╝<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"},{"title":"文章分类","url":"/categories/index.html","content":""},{"title":"tags","url":"/tags/index.html","content":""}]